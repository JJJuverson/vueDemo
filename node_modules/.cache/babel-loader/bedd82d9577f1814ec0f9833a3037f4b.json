{"remainingRequest":"C:\\Users\\zfs\\Desktop\\vue3.0-admin-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\zfs\\Desktop\\vue3.0-admin-master\\src\\mock\\index.js","dependencies":[{"path":"C:\\Users\\zfs\\Desktop\\vue3.0-admin-master\\src\\mock\\index.js","mtime":1579599613000},{"path":"C:\\Users\\zfs\\Desktop\\vue3.0-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\zfs\\Desktop\\vue3.0-admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNvbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBNb2NrIGZyb20gIm1vY2tqcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBNb2NrQWRhcHRlciBmcm9tICdheGlvcy1tb2NrLWFkYXB0ZXInOwppbXBvcnQgeyBBZG1pbnMgfSBmcm9tICIuL2RhdGEvYWRtaW4iOwppbXBvcnQgeyBfIH0gZnJvbSAiY29yZS1qcyI7CnZhciBfQWRtaW5zID0gQWRtaW5zOwpleHBvcnQgZGVmYXVsdCB7CiAgYm9vdHN0cmFwOiBmdW5jdGlvbiBib290c3RyYXAoKSB7CiAgICB2YXIgbW9jayA9IG5ldyBNb2NrQWRhcHRlcihheGlvcyk7CiAgICBtb2NrLm9uR2V0KCcvc3VjY2VzcycpLnJlcGx5KDIwMCwgewogICAgICBtc2c6ICdzdWNjZXNzJwogICAgfSk7CiAgICBtb2NrLm9uR2V0KCcvZXJyb3InKS5yZXBseSg1MDAsIHsKICAgICAgbXNnOiAnZmFpbHVyZScKICAgIH0pOyAvLyDnmbvlvZUKCiAgICBtb2NrLm9uR2V0KCcvbG9naW4nKS5yZXBseShmdW5jdGlvbiAoY29uZmlnKSB7CiAgICAgIHZhciBfY29uZmlnJHBhcmFtcyA9IGNvbmZpZy5wYXJhbXMsCiAgICAgICAgICBuYW1lID0gX2NvbmZpZyRwYXJhbXMubmFtZSwKICAgICAgICAgIHBhc3MgPSBfY29uZmlnJHBhcmFtcy5wYXNzOwogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIGlmIChuYW1lID09PSAnYWRtaW4nICYmIHBhc3MgPT09ICdhZG1pbicgfHwgbmFtZSA9PT0gJ2VkaXRvcicgJiYgcGFzcyA9PT0gJ2VkaXRvcicpIHsKICAgICAgICAgIHJlc29sdmUoWzIwMCwgewogICAgICAgICAgICBjb2RlOiAwLAogICAgICAgICAgICBtc2c6ICfmiJDlip8nLAogICAgICAgICAgICByZXN1bHQ6IHt9CiAgICAgICAgICB9XSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJlc29sdmUoWzIwMCwgewogICAgICAgICAgICBjb2RlOiAxLAogICAgICAgICAgICBtc2c6ICfotKblj7cv5a+G56CB6ZSZ6K+vJywKICAgICAgICAgICAgcmVzdWx0OiB7fQogICAgICAgICAgfV0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9KTsgLy8g6I635Y+W6LSm5Y+35YiX6KGoCgogICAgbW9jay5vbkdldCgnL2FkbWluJykucmVwbHkoZnVuY3Rpb24gKGNvbmZpZykgewogICAgICB2YXIgX2NvbmZpZyRwYXJhbXMyID0gY29uZmlnLnBhcmFtcywKICAgICAgICAgIHBhZ2UgPSBfY29uZmlnJHBhcmFtczIucGFnZSwKICAgICAgICAgIGlkID0gX2NvbmZpZyRwYXJhbXMyLmlkOwoKICAgICAgdmFyIG1vY2tBZG1pbnMgPSBfQWRtaW5zLmZpbHRlcihmdW5jdGlvbiAoYWRtaW4pIHsKICAgICAgICBpZiAoaWQpIHsKICAgICAgICAgIHJldHVybiBhZG1pblsnaWQnXSA9PSBpZCA/IHRydWUgOiBmYWxzZTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICB9KTsKCiAgICAgIHZhciB0b3RhbCA9IG1vY2tBZG1pbnMubGVuZ3RoOwogICAgICBtb2NrQWRtaW5zID0gdG90YWwgPD0gMSA/IG1vY2tBZG1pbnMgOiBtb2NrQWRtaW5zLmZpbHRlcihmdW5jdGlvbiAodSwgaW5kZXgpIHsKICAgICAgICByZXR1cm4gaW5kZXggPCAxNSAqIHBhZ2UgJiYgaW5kZXggPj0gMTUgKiAocGFnZSAtIDEpOwogICAgICB9KTsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJlc29sdmUoWzIwMCwgewogICAgICAgICAgICBjb2RlOiAwLAogICAgICAgICAgICBtc2c6ICdzdWNjZXNzJywKICAgICAgICAgICAgcmVzdWx0OiB7CiAgICAgICAgICAgICAgdG90YWw6IHRvdGFsLAogICAgICAgICAgICAgIGFkbWluczogbW9ja0FkbWlucwogICAgICAgICAgICB9CiAgICAgICAgICB9XSk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSk7IC8vIOaWsOWinui0puWPtwoKICAgIG1vY2sub25Qb3N0KCcvYWRtaW4nKS5yZXBseShmdW5jdGlvbiAoY29uZmlnKSB7CiAgICAgIHZhciBuZXdWYWwgPSBKU09OLnBhcnNlKGNvbmZpZy5kYXRhKTsKICAgICAgdmFyIG5ld0FkbWluID0gbmV3VmFsWydwYXJhbXMnXTsKICAgICAgbmV3QWRtaW5bJ2FkZHInXSA9IG5ld0FkbWluWydhZGRyJ10uam9pbignICcpOwogICAgICBuZXdBZG1pblsnaWQnXSA9IF9BZG1pbnNbX0FkbWlucy5sZW5ndGggLSAxXS5pZCArIDE7CgogICAgICBfQWRtaW5zLnB1c2gobmV3QWRtaW4pOwoKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJlc29sdmUoWzIwMCwgewogICAgICAgICAgICBjb2RlOiAwLAogICAgICAgICAgICBtc2c6ICfmlrDlop7miJDlip8nLAogICAgICAgICAgICByZXN1bHQ6IHt9CiAgICAgICAgICB9XSk7CiAgICAgICAgfSwgNTAwKTsKICAgICAgfSk7CiAgICB9KTsgLy8g5L+u5pS56LSm5Y+3CgogICAgbW9jay5vblB1dCgnL2FkbWluJykucmVwbHkoZnVuY3Rpb24gKGNvbmZpZykgewogICAgICB2YXIgbmV3VmFsID0gSlNPTi5wYXJzZShjb25maWcuZGF0YSk7CiAgICAgIHZhciB1cGRhdGVWYWwgPSBuZXdWYWxbJ3BhcmFtcyddOwoKICAgICAgX0FkbWlucy5zb21lKGZ1bmN0aW9uICh1KSB7CiAgICAgICAgaWYgKHUuaWQgPT09IHVwZGF0ZVZhbC5pZCkgewogICAgICAgICAgdS5uYW1lID0gdXBkYXRlVmFsLm5hbWU7CiAgICAgICAgICB1LmVtYWlsID0gdXBkYXRlVmFsLmVtYWlsOwogICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICB9KTsKCiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXNvbHZlKFsyMDAsIHsKICAgICAgICAgICAgY29kZTogMCwKICAgICAgICAgICAgbXNnOiAn5L+u5pS55oiQ5YqfJywKICAgICAgICAgICAgcmVzdWx0OiB7fQogICAgICAgICAgfV0pOwogICAgICAgIH0sIDUwMCk7CiAgICAgIH0pOwogICAgfSk7IC8vIOWIoOmZpOi0puWPtwoKICAgIG1vY2sub25EZWxldGUoJy9hZG1pbicpLnJlcGx5KGZ1bmN0aW9uIChjb25maWcpIHsKICAgICAgdmFyIHZhbCA9IGNvbmZpZ1sncGFyYW1zJ107CiAgICAgIHZhciBpZCA9IHZhbC5pZDsKICAgICAgX0FkbWlucyA9IF9BZG1pbnMuZmlsdGVyKGZ1bmN0aW9uICh1KSB7CiAgICAgICAgcmV0dXJuIHUuaWQgIT09IGlkOwogICAgICB9KTsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJlc29sdmUoWzIwMCwgewogICAgICAgICAgICBjb2RlOiAwLAogICAgICAgICAgICBtc2c6ICfliKDpmaTmiJDlip8nLAogICAgICAgICAgICByZXN1bHQ6IHt9CiAgICAgICAgICB9XSk7CiAgICAgICAgfSwgNTAwKTsKICAgICAgfSk7CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["C:/Users/zfs/Desktop/vue3.0-admin-master/src/mock/index.js"],"names":["Mock","axios","MockAdapter","Admins","_","_Admins","bootstrap","mock","onGet","reply","msg","config","params","name","pass","Promise","resolve","reject","code","result","page","id","mockAdmins","filter","admin","total","length","u","index","setTimeout","admins","onPost","newVal","JSON","parse","data","newAdmin","join","push","onPut","updateVal","some","email","onDelete","val"],"mappings":"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","sourcesContent":["import Mock from \"mockjs\";\nimport axios from 'axios';\nimport MockAdapter from 'axios-mock-adapter';\nimport { Admins } from './data/admin'\nimport { _ } from \"core-js\";\n\nlet _Admins = Admins\n\nexport default {\n  bootstrap() {\n    let mock = new MockAdapter(axios)\n\n    mock.onGet('/success').reply(200, {\n      msg: 'success'\n    })\n\n    mock.onGet('/error').reply(500, {\n      msg: 'failure'\n    })\n\n    // 登录\n    mock.onGet('/login').reply(config => {\n      let { name, pass } = config.params\n      return new Promise((resolve, reject) => {\n        if ((name === 'admin' && pass === 'admin') || (name === 'editor' && pass === 'editor')) {\n          resolve ([200, {code: 0, msg: '成功', result: {}}])\n        } else {\n          resolve ([200, {code: 1, msg: '账号/密码错误', result: {}}])\n        }\n      })\n    })\n\n    // 获取账号列表\n    mock.onGet('/admin').reply(config => {\n      let { page, id } = config.params\n      let mockAdmins = _Admins.filter(admin => {\n        if (id) {\n          return admin['id'] == id ? true : false\n        } else {\n          return true\n        }\n      })\n\n      let total = mockAdmins.length\n      mockAdmins = total <=1 ? mockAdmins : mockAdmins.filter((u, index) => index < 15*page && index >= 15*(page - 1))\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          resolve([200, {\n            code: 0,\n            msg: 'success',\n            result: {\n              total,\n              admins: mockAdmins\n            }\n          }])\n        })\n      })\n    })\n\n    // 新增账号\n    mock.onPost('/admin').reply(config => {\n      let newVal = JSON.parse(config.data);\n      let newAdmin = newVal['params']\n      newAdmin['addr'] = newAdmin['addr'].join(' ')\n      newAdmin['id'] = _Admins[_Admins.length - 1].id + 1\n      _Admins.push(newAdmin)\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          resolve([200, {\n            code: 0,\n            msg: '新增成功',\n            result: {}\n          }])\n        }, 500)\n      })\n    })\n\n    // 修改账号\n    mock.onPut('/admin').reply(config => {\n      let newVal = JSON.parse(config.data)\n      let updateVal = newVal['params']\n      _Admins.some(u => {\n        if (u.id === updateVal.id) {\n          u.name = updateVal.name\n          u.email = updateVal.email\n          return true\n        }\n      })\n\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          resolve([200, {\n            code: 0,\n            msg: '修改成功',\n            result: {}\n          }])\n        }, 500)\n      })\n    })\n\n    // 删除账号\n    mock.onDelete('/admin').reply(config => {\n      let val = config['params']\n      let { id } = val\n      _Admins = _Admins.filter(u => u.id !== id)\n\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          resolve([200, {\n            code: 0,\n            msg: '删除成功',\n            result: {}\n          }])\n        }, 500)\n      })\n    })\n\n  }\n}"]}]}